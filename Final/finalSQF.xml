<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    version="5.0">
    <info>
        <title>Schematron QuickFix</title>
        <author>
            <personname><firstname>Octavian</firstname>
                <surname>Nadolu</surname></personname>
            <affiliation>
                <orgname>oXygen XML Editor</orgname>
            </affiliation>
            <email>octavian_nadolu@oxygenxml.com</email>
        </author>
        <author>
            <personname><firstname>Nico</firstname>
                <surname>Kutscherauer</surname></personname>
            <affiliation>
                <orgname>data2type GmbH</orgname>
            </affiliation>
            <email>kutscherauer@schematron-quickfix.com</email>
            <email>kutscherauer@data2type.de</email>
        </author>
        <abstract>
            <para>Fixing XML validation errors can be challenging for many users, especially if they
                are not very familiar with XML syntax and structure. For many years, development
                tools have provided ways to allow users to select actions that automatically fix
                reported issues for certain programming languages (such as Java, C, etc.). This
                functionality is usually called "Quick Fixes". In a similar way, XML tools provide
                Quick Fixes for XML validation errors. For instance, Eclipse has included XML Quick
                Fixes for over 10 years. Another example of this idea is the spell checking
                functionality, which provides a list of possible corrections and allows the user to
                select one of them as a replacement for an incorrect word.</para>
            <para>The validation of XML documents against DTD, XML Schema, or RELAX NG schema
                provides a limited set of possible problems and is usually only able to detect basic
                structural errors (such as a missing element or attribute) and the corresponding
                automatic fixes are usually rather straightforward. A more interesting case would be
                if you are using Schematron to identify issues in XML documents, as the fixes in
                this case may range from trivial to very complex and there is no automatic way of
                fixing them.</para>
            <para>Schematron solves the limitation that other types of schema have when validating
                XML documents because it allows the schema author to define the errors and control
                the messages that are presented to the user. Thus the validation errors are more
                accessible to users and it ensures that they understand the problem. These messages
                may also include hints for what the user can do to fix the problem, but this creates
                a gap because the user still needs to manually correct the issue. This could cause
                people to waste valuable time and creates the possibility of making additional
                errors while trying to manually fix the reported problem. Providing a Quick Fix
                functionality for Schematron validation errors will bridge this gap, saving time and
                avoiding the potential for causing other issues.</para>
            <para>Two years ago, the idea of Schematron QuickFix (SQF) was discussed during the XML
                Prague conference and it started to take shape. It has now reached a point where we
                have a draft specification available, a W3C community group dedicated to <link
                    xlink:href="https://www.w3.org/community/quickfix/">XML Quick Fixes</link>, and
                two independent SQF implementations. The first draft of the Schematron QuickFix
                specification was published in April, 2015 and it is now available on <link
                    xlink:href="http://schematron-quickfix.github.io/sqf">GitHub</link> and within
                the W3C "Quick-Fix Support for XML Community Group".</para>
            <para>Schematron QuickFix defines a simple language to specify the actions that will be
                used to fix the detected issues, layered on top of XPath and XSLT, and integrated
                within Schematron schemas through the Schematron annotation support.</para>
            <para>In this session, we will present various use cases that are solved with Schematron
                Quick Fixes, ranging from simple to complex, sometimes involving changes in multiple
                locations within a document, or even in external documents. We will also discuss the
                language and technological challenges related to the SQF implementation. Join us to
                learn how SQF can be useful in your next XML project!</para>
            <para> </para>
        </abstract>
    </info>
    <sect1>
        <title>Introduction</title>
        <para>Helping users to solve errors from XML documents has always been a challenge. There
            are various solutions to generate automatically the proposals that fix the errors and
            present them to the user. The fix proposals can be generated by the validation engine,
            or based on the error messages, or on error codes that we get from the validation
            engine. However, a language that can allow the developer to define fixes is more
            powerful and flexible. </para>
        <para>Schematron has become more and more popular in the XML world. Companies are using
            Schematron to enforce business rules to their documents and to verify the quality of
            their documents. Schematron schema is a language that defines rules for the structure
            and content that an XML document should follow.</para>
        <para>The Schematron QuickFix (SQF) has been developed as an extension of the Schematron
            schema language. It is a language that allows users to define fixes for the Schematron
            validation errors. </para>
    </sect1>
    <sect1>
        <title>Validation Errors</title>
        <para>A validation error can be described by three things: the validation message, the
            location of the error, and how to fix this error.</para>
        <figure>
            <title>validationError.png</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="validationError.png"/>
                </imageobject>
            </mediaobject>
        </figure>
        <para>When an XML document is validated against an XSD, RNG or DTD schema, the error
            messages refer more to the XML syntax of the document and are not easily understood by
            the user. To fix this type of errors, the user must understand the validation messages,
            check the location of the problems, and determine what operations must be done.</para>
        <para>For the validation of an XML document against a Schematron schema, the errors are in
            fact constraints or business rules and are meant to be more easily understood by the
            user. The Schematron developer can better explain what operations should be done in
            order to fix the problem because they can use custom messages. Also, the location of the
            problem can be specified in the Schematron schema.</para>
        <para>However, in both cases, to fix the error the user must do the operations manually and
            this can result in generating even more errors. The automation of the error-fixing
            process will help the user to solve the problem faster and with fewer errors.</para>
        <para>A good example of error fixing is a spell checker. A spell checker presents errors but
            also offers a set of solutions to fix them. Similarly, solutions can be generated for
            XML validation errors.</para>
    </sect1>
    <sect1>
        <title>Fixing Validation Errors</title>
        <para>Over the course of time various IDEs (such as Eclipse or IntelliJ IDEA) have
            implemented fixes for XML validation errors. In these cases, the implementation was made
            directly in the engine. However, it will be better to have an implementation that does
            not depend on the validation engine. A way to solve this is by analyzing the validation
            message, error code, and the error location that the engine provides.</para>
        <para>We can say that the validation errors can be split in two categories:</para>
        <para>
            <itemizedlist>
                <listitem>
                    <para>Predefined - defined in the validation engine. This is the case when an
                        XML document is validated against an XSD, RNG, or DTD schema.</para>
                </listitem>
                <listitem>
                    <para>Custom - defined by the user. When an XML document is validated against a
                        Schematron schema.</para>
                </listitem>
            </itemizedlist>
        </para>
        <sect2>
            <title>Fixing Predefined Errors</title>
            <para>For the predefined errors, fixes can be provided automatically based on the
                message, error code (if there is one), and location of the error. A limitation of
                this approach could be that each validation engine might provide its own predefined
                messages and error codes. Therefore, you will need an implementation for each
                validation engine.</para>
            <para>However, by providing fix proposals for these type of errors, the user will be
                helped with not only solving the problem, but also understanding it. The messages
                from the validation processor are often difficult to understood for basic users. For
                example, when an ID definition is missing, you might get the following error
                message:</para>
            <para><errortext>cvc-id.1: There is no ID/IDREF binding for IDREF
                    'robert.tayor'.</errortext>
            </para>
            <para>It would be more appropriate to have a more understandable message, such as:
                "There is an invalid ID reference: 'robert.tayor'. Would you like to change it to a
                similar ID: 'robert.taylor'?"</para>
            <para>Another example could be when an XSL document is validated and we have an
                undeclared function. This might cause the following error to be presented:</para>
            <para><errortext>XPST0017 XPath syntax error at char 0 on line 1802 near {...x($boxID,
                    func:getButtonId(...}: Cannot find a matching 2-argument function named
                    {http://www.oxygenxml.com/doc/xsl/functions}createBox()</errortext></para>
            <para>In this case, a more appropriate way to present the error might be: "The function
                'func:getButtonId()' has not been defined. Would you like to create this function or
                reference a function with a similar name?"</para>
            <para><inlinemediaobject>
                    <imageobject>
                        <imagedata fileref="xslErr.png"/>
                    </imageobject>
                </inlinemediaobject></para>
            <?oxy_custom_start type="oxy_content_highlight" color="180,215,3"?>
        </sect2>
        <?oxy_custom_end?>
        <sect2>
            <title>Fixing Custom Errors</title>
            <para>When an XML document is validated against a Schematron schema, we obtain our own
                customized errors. The errors are defined in the Schematron schema using the
                    <emphasis>assert</emphasis> and <emphasis>report</emphasis> elements. In this
                case, it is difficult, and sometimes impossible, to generate a fix based on the
                error message and location. </para>
            <para>Therefore, a solution to propose fixes for this type of errors is to define the
                fixes directly in the schema. A Schematron developer can create fixes and associate
                them with the <emphasis>assert</emphasis> or <emphasis>report</emphasis> message.<mediaobject>
                    <imageobject>
                        <imagedata fileref="SQFFix.png"/>
                    </imageobject>
                </mediaobject></para>
            <para>These fixes can be defined using the annotations support from Schematron.
                Schematron allows elements and attributes from other namespaces to be added as
                annotations in the schema. Thus, the validation of the Schematron will not be
                affected if new elements and attributes are added in the schema. </para>
        </sect2>
    </sect1>
    <sect1>
        <title>Schematron Quick Fixes</title>
        <para>To allow users to create fixes for the Schematron error messages, the Schematron
            QuickFix (SQF) language was created as an extension of Schematron. Using the SQF
            language, users can define fixes for <emphasis>assert</emphasis> or
                <emphasis>report</emphasis> error messages. </para>
        <para>The Schematron QuickFix has been defined as a simple but powerful language. It defines
            some basic operations that needs to be implemented by the processor.</para>
        <para>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="sqf_Lang1.png"/>
                </imageobject>
            </mediaobject>
        </para>
        <para>The operations can be done with precision in a specified place and you do not need to
            modify the entire document.</para>
        <para>The first draft of the Schematron QuickFix specification was published in April 2015
            on the <link xlink:href="https://www.w3.org/community/quickfix/">W3C community
                group</link> page.</para>
        <sect2>
            <title>SQF Benefits</title>
            <para>The Schematron schema can be used to validate any type of XML document. Thus,
                business rules or constraints can be defined for projects containing DITA, DocBook,
                XHTML, or TEI documents, and also for stylesheets or XML Schemas.</para>
            <para>For DITA, DocBook, XHTML, or TEI documents, simple styling rules can be imposed,
                such as:</para>
            <itemizedlist>
                <listitem>
                    <para>The title should not contain bold.</para>
                </listitem>
                <listitem>
                    <para>A list should contain more than one list item.</para>
                </listitem>
            </itemizedlist>
            <para>Also, more complex rules can be added, such as: <itemizedlist>
                    <listitem>
                        <para>Ensure that the table layout is correct.</para>
                    </listitem>
                    <listitem>
                        <para>All text needs to be normalized (NFC).</para>
                    </listitem>
                </itemizedlist></para>
            <para>For XSLT, XSD, or RNG documents, you can define coding styles, such as: </para>
            <itemizedlist>
                <listitem>
                    <para>The name of the variables must not contain '-', and it is recommended to
                        be camel case.</para>
                </listitem>
                <listitem>
                    <para>The name length of templates and functions should not exceed a specified
                        value.</para>
                </listitem>
            </itemizedlist>
            <para>Some of these rules can be solved very easily, while a less experienced user might
                make mistakes and add other errors. On the other hand, a user with experience might
                be able solve them rather easily, but might need to perform a few operations.</para>
            <para>For more complex problems (for instance, problems that will update multiple nodes
                in the document or make complex conversions), it would be better to have an action
                to do this automatically.</para>
        </sect2>
        <sect2>
            <title>SQF Implementations</title>
            <para>An SQF fix consists of a set of operations that must be performed in an XML
                document. These are basic operations (add, delete, replace, and string replace) that
                needs to make precise changes in the document. This means that when a quick fix is
                applied, only the affected part of the XML document should be changed and the
                DOCTYPE declaration, entities, etc. must be preserved.</para>
            <para>There are two types of implementations that can be used to execute Schematron
                Quick Fixes:<itemizedlist>
                    <listitem>
                        <para>Using an engine (implemented in Java, C, or other language) that will
                            collect the fixes during the Schematron validation process, and will
                            perform the modification precisely (using the engine programming
                            language) when the fix is applied. </para>
                    </listitem>
                    <listitem>
                        <para>Using an XSLT engine that will generate a set of XSLT scripts during
                            the Schematron validation process, and these scripts will be applied
                            when the fix is executed.</para>
                    </listitem>
                </itemizedlist></para>
        </sect2>
    </sect1>
    <sect1>
        <title>Schematron QuickFix Language</title>
        <para><?oxy_custom_start type="oxy_content_highlight" color="255,255,0"?>Nico<?oxy_custom_end?></para>
    </sect1>
    <sect1>
        <title>Projects using SQF</title>
        <para>There are some projects available that use the SQF language to propose fixes:</para>
        <itemizedlist>
            <listitem>
                <para>Dynamic Information Model (DIM) project (<link
                        xlink:href="https://github.com/oxygenxml/dim"
                        >https://github.com/oxygenxml/dim</link>) - uses SQF to propose quick fixes
                    for the Schematron rules.</para>
            </listitem>
            <listitem>
                <para>TEI (<link xlink:href="http://wiki.tei-c.org/index.php/Category:Schematron"
                        >http://wiki.tei-c.org/index.php/Category:Schematron</link>) - a page that
                    contains Schematron schemas and SQF that can be used to determine and fix
                    various problems in TEI documents.</para>
            </listitem>
            <listitem>
                <para>&lt;oXygen/> DITA framework - a built-in framework in oXygen XML Editor for
                    DITA documents and it also contains a set of Schematron schemas and SQF fixes
                    that can be used to impose rules and propose fixes to solve errors.</para>
            </listitem>
            <listitem>
                <para>&lt;oXygen/> User Manual (<link
                        xlink:href="https://github.com/oxygenxml/userguide"
                        >https://github.com/oxygenxml/userguide</link>) - a public version of the
                    oXygen XML Editor user guide that provides an example where SQF rules have been
                    implemented on a DITA project.</para>
            </listitem>
        </itemizedlist>
    </sect1>
    <sect1>
        <title>Conclusions and Future Plans</title>
        <para>In the near future, we plan to publish the second draft of the Schematron QuickFix
            specification that will contain new things such as how you can execute fixes on other
            documents, new definitions, and examples for the SQF elements.</para>
        <para>We intend to update the specification and add other elements or change their behavior,
            based upon discussions and feedback that we have received on the <link
                xlink:href="https://github.com/schematron-quickfix/sqf">SQF GitHub project</link>.
            For example, the <emphasis>call-fix</emphasis> element will be able to reference a group
            of operations and support will be added to allow you to generate the fixes
            dynamically.</para>
    </sect1>
</article>
